// automatically generated by the FlatBuffers compiler, do not modify

package motis;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Polyline extends Table {
  public static Polyline getRootAsPolyline(ByteBuffer _bb) { return getRootAsPolyline(_bb, new Polyline()); }
  public static Polyline getRootAsPolyline(ByteBuffer _bb, Polyline obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public Polyline __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public double coordinates(int j) { int o = __offset(4); return o != 0 ? bb.getDouble(__vector(o) + j * 8) : 0; }
  public int coordinatesLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer coordinatesAsByteBuffer() { return __vector_as_bytebuffer(4, 8); }

  public static int createPolyline(FlatBufferBuilder builder,
      int coordinatesOffset) {
    builder.startObject(1);
    Polyline.addCoordinates(builder, coordinatesOffset);
    return Polyline.endPolyline(builder);
  }

  public static void startPolyline(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addCoordinates(FlatBufferBuilder builder, int coordinatesOffset) { builder.addOffset(0, coordinatesOffset, 0); }
  public static int createCoordinatesVector(FlatBufferBuilder builder, double[] data) { builder.startVector(8, data.length, 8); for (int i = data.length - 1; i >= 0; i--) builder.addDouble(data[i]); return builder.endVector(); }
  public static void startCoordinatesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(8, numElems, 8); }
  public static int endPolyline(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
};

