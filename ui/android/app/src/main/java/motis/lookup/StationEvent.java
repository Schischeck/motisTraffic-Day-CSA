// automatically generated by the FlatBuffers compiler, do not modify

package motis.lookup;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class StationEvent extends Table {
  public static StationEvent getRootAsStationEvent(ByteBuffer _bb) { return getRootAsStationEvent(_bb, new StationEvent()); }
  public static StationEvent getRootAsStationEvent(ByteBuffer _bb, StationEvent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public StationEvent __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public motis.TripId tripId(int j) { return tripId(new motis.TripId(), j); }
  public motis.TripId tripId(motis.TripId obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int tripIdLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public byte type() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public long trainNr() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0; }
  public String lineId() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer lineIdAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public long time() { int o = __offset(12); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public long scheduleTime() { int o = __offset(14); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public String direction() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer directionAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public String serviceName() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer serviceNameAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public String track() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer trackAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }

  public static int createStationEvent(FlatBufferBuilder builder,
      int trip_idOffset,
      byte type,
      long train_nr,
      int line_idOffset,
      long time,
      long schedule_time,
      int directionOffset,
      int service_nameOffset,
      int trackOffset) {
    builder.startObject(9);
    StationEvent.addScheduleTime(builder, schedule_time);
    StationEvent.addTime(builder, time);
    StationEvent.addTrack(builder, trackOffset);
    StationEvent.addServiceName(builder, service_nameOffset);
    StationEvent.addDirection(builder, directionOffset);
    StationEvent.addLineId(builder, line_idOffset);
    StationEvent.addTrainNr(builder, train_nr);
    StationEvent.addTripId(builder, trip_idOffset);
    StationEvent.addType(builder, type);
    return StationEvent.endStationEvent(builder);
  }

  public static void startStationEvent(FlatBufferBuilder builder) { builder.startObject(9); }
  public static void addTripId(FlatBufferBuilder builder, int tripIdOffset) { builder.addOffset(0, tripIdOffset, 0); }
  public static int createTripIdVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTripIdVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(1, type, 0); }
  public static void addTrainNr(FlatBufferBuilder builder, long trainNr) { builder.addInt(2, (int)trainNr, 0); }
  public static void addLineId(FlatBufferBuilder builder, int lineIdOffset) { builder.addOffset(3, lineIdOffset, 0); }
  public static void addTime(FlatBufferBuilder builder, long time) { builder.addLong(4, time, 0); }
  public static void addScheduleTime(FlatBufferBuilder builder, long scheduleTime) { builder.addLong(5, scheduleTime, 0); }
  public static void addDirection(FlatBufferBuilder builder, int directionOffset) { builder.addOffset(6, directionOffset, 0); }
  public static void addServiceName(FlatBufferBuilder builder, int serviceNameOffset) { builder.addOffset(7, serviceNameOffset, 0); }
  public static void addTrack(FlatBufferBuilder builder, int trackOffset) { builder.addOffset(8, trackOffset, 0); }
  public static int endStationEvent(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
};

