// automatically generated by the FlatBuffers compiler, do not modify

package motis.intermodal;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ModeWrapper extends Table {
  public static ModeWrapper getRootAsModeWrapper(ByteBuffer _bb) { return getRootAsModeWrapper(_bb, new ModeWrapper()); }
  public static ModeWrapper getRootAsModeWrapper(ByteBuffer _bb, ModeWrapper obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public ModeWrapper __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public byte modeType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table mode(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o) : null; }

  public static int createModeWrapper(FlatBufferBuilder builder,
      byte mode_type,
      int modeOffset) {
    builder.startObject(2);
    ModeWrapper.addMode(builder, modeOffset);
    ModeWrapper.addModeType(builder, mode_type);
    return ModeWrapper.endModeWrapper(builder);
  }

  public static void startModeWrapper(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addModeType(FlatBufferBuilder builder, byte modeType) { builder.addByte(0, modeType, 0); }
  public static void addMode(FlatBufferBuilder builder, int modeOffset) { builder.addOffset(1, modeOffset, 0); }
  public static int endModeWrapper(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
};

