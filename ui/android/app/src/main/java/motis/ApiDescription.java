// automatically generated by the FlatBuffers compiler, do not modify

package motis;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ApiDescription extends Table {
  public static ApiDescription getRootAsApiDescription(ByteBuffer _bb) { return getRootAsApiDescription(_bb, new ApiDescription()); }
  public static ApiDescription getRootAsApiDescription(ByteBuffer _bb, ApiDescription obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public ApiDescription __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public String fbs(int j) { int o = __offset(4); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int fbsLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public Method methods(int j) { return methods(new Method(), j); }
  public Method methods(Method obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int methodsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createApiDescription(FlatBufferBuilder builder,
      int fbsOffset,
      int methodsOffset) {
    builder.startObject(2);
    ApiDescription.addMethods(builder, methodsOffset);
    ApiDescription.addFbs(builder, fbsOffset);
    return ApiDescription.endApiDescription(builder);
  }

  public static void startApiDescription(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addFbs(FlatBufferBuilder builder, int fbsOffset) { builder.addOffset(0, fbsOffset, 0); }
  public static int createFbsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startFbsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMethods(FlatBufferBuilder builder, int methodsOffset) { builder.addOffset(1, methodsOffset, 0); }
  public static int createMethodsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMethodsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endApiDescription(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
};

