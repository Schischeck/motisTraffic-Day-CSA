include "address/AddressRequest.fbs";
include "address/AddressResponse.fbs";
include "bikesharing/BikesharingGeoTerminalsRequest.fbs";
include "bikesharing/BikesharingGeoTerminalsResponse.fbs";
include "bikesharing/BikesharingRequest.fbs";
include "bikesharing/BikesharingResponse.fbs";
include "guesser/StationGuesserRequest.fbs";
include "guesser/StationGuesserResponse.fbs";
include "intermodal/IntermodalRoutingRequest.fbs";
include "lookup/LookupGeoStationIdRequest.fbs";
include "lookup/LookupGeoStationRequest.fbs";
include "lookup/LookupGeoStationResponse.fbs";
include "lookup/LookupScheduleInfoResponse.fbs";
include "lookup/LookupStationEventsRequest.fbs";
include "lookup/LookupStationEventsResponse.fbs";
include "lookup/LookupMetaStationRequest.fbs";
include "lookup/LookupMetaStationResponse.fbs";
include "lookup/LookupIdTrainRequest.fbs";
include "lookup/LookupIdTrainResponse.fbs";
include "path/PathBoxesResponse.fbs";
include "path/PathIdTrainRequest.fbs";
include "path/PathSeqResponse.fbs";
include "path/PathStationSeqRequest.fbs";
include "railviz/RailVizTrainsRequest.fbs";
include "railviz/RailVizTrainsResponse.fbs";
include "railviz/RailVizTripsRequest.fbs";
include "railviz/RailVizStationRequest.fbs";
include "railviz/RailVizStationResponse.fbs";
include "railviz/RailVizTripGuessRequest.fbs";
include "railviz/RailVizTripGuessResponse.fbs";
include "osrm/OSRMOneToManyRequest.fbs";
include "osrm/OSRMOneToManyResponse.fbs";
include "osrm/OSRMViaRouteRequest.fbs";
include "osrm/OSRMViaRouteResponse.fbs";
include "osrm/OSRMSmoothViaRouteRequest.fbs";
include "osrm/OSRMSmoothViaRouteResponse.fbs";
include "reliability/ReliabilityRatingResponse.fbs";
include "reliability/ReliableRoutingRequest.fbs";
include "reliability/ReliableRoutingResponse.fbs";
include "ris/RISBatch.fbs";
include "ris/RISForwardTimeRequest.fbs";
include "routing/RoutingRequest.fbs";
include "routing/RoutingResponse.fbs";
include "rt/RtUpdate.fbs";

include "HTTPMessage.fbs";

namespace motis;

// JSON example:
// --
// {
//   "content_type": "MotisError",
//   "content": {
//     "error_code": 1,
//     "category": "motis::access",
//     "reason": "module: there is no module capable of handling the message"
//   }
// }
table MotisError {
  error_code:ushort;
  category:string;
  reason:string;
}

// JSON example:
// --
// {
//   "content_type": "MotisSuccess",
//   "content": {
//   }
// }
table MotisSuccess {
}

// JSON example:
// --
// {
//   "content_type": "MotisNoMessage",
//   "content": {
//   }
// }
table MotisNoMessage {
}

table Method {
  path:string;
  in:string;
  out:string;
}

table ApiDescription {
  fbs:[string];
  methods:[Method];
}

union MsgContent {
  motis.ApiDescription = 1,
  motis.Connection,
  motis.MotisNoMessage,
  motis.MotisError,
  motis.MotisSuccess,
  motis.HTTPRequest,
  motis.HTTPResponse,
  motis.TripId,
  motis.bikesharing.BikesharingRequest = 100,
  motis.bikesharing.BikesharingResponse,
  motis.bikesharing.BikesharingGeoTerminalsRequest,
  motis.bikesharing.BikesharingGeoTerminalsResponse,
  motis.guesser.StationGuesserRequest = 200,
  motis.guesser.StationGuesserResponse,
  motis.intermodal.IntermodalRoutingRequest = 300,
  motis.lookup.LookupGeoStationIdRequest = 400,
  motis.lookup.LookupGeoStationRequest,
  motis.lookup.LookupGeoStationResponse,
  motis.lookup.LookupBatchGeoStationRequest,
  motis.lookup.LookupBatchGeoStationResponse,
  motis.lookup.LookupStationEventsRequest,
  motis.lookup.LookupStationEventsResponse,
  motis.lookup.LookupScheduleInfoResponse,
  motis.lookup.LookupMetaStationRequest,
  motis.lookup.LookupMetaStationResponse,
  motis.lookup.LookupBatchMetaStationRequest,
  motis.lookup.LookupBatchMetaStationResponse,
  motis.lookup.LookupIdTrainRequest,
  motis.lookup.LookupIdTrainResponse,
  motis.path.PathBoxesResponse = 500,
  motis.path.PathIdTrainRequest,
  motis.path.PathSeqResponse,
  motis.path.PathStationSeqRequest,
  motis.railviz.RailVizTrainsRequest = 600,
  motis.railviz.RailVizTrainsResponse,
  motis.railviz.RailVizTripsRequest,
  motis.railviz.RailVizStationRequest,
  motis.railviz.RailVizStationResponse,
  motis.osrm.OSRMOneToManyRequest = 700,
  motis.osrm.OSRMOneToManyResponse,
  motis.osrm.OSRMViaRouteRequest,
  motis.osrm.OSRMViaRouteResponse,
  motis.osrm.OSRMSmoothViaRouteRequest,
  motis.osrm.OSRMSmoothViaRouteResponse,
  motis.reliability.ReliableRoutingRequest = 800,
  motis.reliability.ReliableRoutingResponse,
  motis.reliability.ReliabilityRatingResponse,
  motis.ris.RISBatch = 900,
  motis.ris.RISForwardTimeRequest,
  motis.routing.RoutingRequest = 1000,
  motis.routing.RoutingResponse,
  motis.rt.RtUpdate = 1100,
  motis.railviz.RailVizTripGuessRequest = 1200,
  motis.railviz.RailVizTripGuessResponse,
  motis.address.AddressRequest = 1300,
  motis.address.AddressResponse
}

// Destination Examples:
//
// Request departure+arrival table for a station
// {
//   "type": "Module",
//   "target": "/lookup/station/8000068/2016-03-02T16:47",
// }
//
// Store a user connection
// {
//   "type": "Module",
//   "target": "/user/connection",
// }
//
// Get alternatives for stored connection
// {
//   "type": "Module",
//   "target": "/user/connection/123456/alternatives",
// }
enum DestinationType : byte { Module, Topic }

table Destination {
  type:DestinationType;
  target:string;
}

table Message {
  destination:Destination;
  content:MsgContent;
  id:int = 0;
}

root_type Message;
