namespace motis.routing;

table StationPathElement {
  name:string;
  eva_nr:string;
}

table CoordinatesPathElement {
  lat:double;
  lon:double;
}

union LocationPathElement { StationPathElement, CoordinatesPathElement }

table LocationPathElementWrapper {
  element: LocationPathElement;
}

enum Type : byte { PreTrip, OnTrip, LateConnection }
enum Direction : byte { Forward, Backward }

// Uses unix timestamps.
struct Interval {
  begin:ulong;
  end:ulong;
}

table MumoEdge {
  from_station_eva:string;
  to_station_eva:string;
  duration:ushort;
  price:ushort;
}

// valid_from and valid_to are minutes after midnight
table TimeDependentMumoEdge {
  edge:MumoEdge;
  valid_from:ushort;
  valid_to:ushort;
}

table HotelEdge {
  station_eva:string;
  earliest_checkout_time:ushort;
  min_stay_duration:ushort;
  price:ushort;
}

union AdditionalEdge { MumoEdge, TimeDependentMumoEdge, HotelEdge }

table AdditionalEdgeWrapper {
  additional_edge:AdditionalEdge;
}

// JSON Example:
// --
// {
//   "content_type": "RoutingRequest",
//   "content": {
//     "interval": {
//       "begin": 1444896228,
//       "end": 1444899228
//     },
//     "type": "PreTrip",
//     "direction": "Forward",
//     "path": [
//       { "eva_nr": "8000096", "name": "" },
//       { "eva_nr": "8000105", "name": "" }
//     ]
//   }
// }
//
// {
//   "content_type": "RoutingRequest",
//   "content": {
//     "interval": {
//       "begin": 1413475200,
//       "end": 1413478800
//     },
//     "type": "PreTrip",
//     "direction": "Forward",
//     "path": [
//       { "name": "Stutt" },
//       { "name": "Darm" }
//     ]
//   }
// }
table RoutingRequest {
  interval:Interval;
  type:Type = PreTrip;
  direction:Direction = Forward;
  path:[LocationPathElementWrapper];
  additional_edges:[AdditionalEdgeWrapper];
}
