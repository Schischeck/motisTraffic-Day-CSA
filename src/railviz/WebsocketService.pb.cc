// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WebsocketService.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "WebsocketService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace td {
namespace railviz {

namespace {

const ::google::protobuf::Descriptor* RequestPovUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestPovUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestAllStations_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestAllStations_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseAllStations_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseAllStations_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseAllStations_Station_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseAllStations_Station_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestGetStationsInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestGetStationsInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestGetStationsInfo_Station_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestGetStationsInfo_Station_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseGetStationsInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseGetStationsInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseGetStationsInfo_Station_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseGetStationsInfo_Station_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestAllTrains_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestAllTrains_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseAllTrains_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseAllTrains_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseAllTrains_Train_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseAllTrains_Train_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseAllTrains_Train_Station_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseAllTrains_Train_Station_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_WebsocketService_2eproto() {
  protobuf_AddDesc_WebsocketService_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "WebsocketService.proto");
  GOOGLE_CHECK(file != NULL);
  RequestPovUpdate_descriptor_ = file->message_type(0);
  static const int RequestPovUpdate_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPovUpdate, protoversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPovUpdate, lt_latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPovUpdate, lt_longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPovUpdate, rb_latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPovUpdate, rb_longitude_),
  };
  RequestPovUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestPovUpdate_descriptor_,
      RequestPovUpdate::default_instance_,
      RequestPovUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPovUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPovUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestPovUpdate));
  RequestAllStations_descriptor_ = file->message_type(1);
  static const int RequestAllStations_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAllStations, protoversion_),
  };
  RequestAllStations_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestAllStations_descriptor_,
      RequestAllStations::default_instance_,
      RequestAllStations_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAllStations, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAllStations, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestAllStations));
  ResponseAllStations_descriptor_ = file->message_type(2);
  static const int ResponseAllStations_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllStations, protoversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllStations, station_),
  };
  ResponseAllStations_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseAllStations_descriptor_,
      ResponseAllStations::default_instance_,
      ResponseAllStations_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllStations, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllStations, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseAllStations));
  ResponseAllStations_Station_descriptor_ = ResponseAllStations_descriptor_->nested_type(0);
  static const int ResponseAllStations_Station_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllStations_Station, stationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllStations_Station, station_latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllStations_Station, station_longitude_),
  };
  ResponseAllStations_Station_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseAllStations_Station_descriptor_,
      ResponseAllStations_Station::default_instance_,
      ResponseAllStations_Station_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllStations_Station, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllStations_Station, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseAllStations_Station));
  RequestGetStationsInfo_descriptor_ = file->message_type(3);
  static const int RequestGetStationsInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGetStationsInfo, protoversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGetStationsInfo, station_),
  };
  RequestGetStationsInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestGetStationsInfo_descriptor_,
      RequestGetStationsInfo::default_instance_,
      RequestGetStationsInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGetStationsInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGetStationsInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestGetStationsInfo));
  RequestGetStationsInfo_Station_descriptor_ = RequestGetStationsInfo_descriptor_->nested_type(0);
  static const int RequestGetStationsInfo_Station_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGetStationsInfo_Station, stationid_),
  };
  RequestGetStationsInfo_Station_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestGetStationsInfo_Station_descriptor_,
      RequestGetStationsInfo_Station::default_instance_,
      RequestGetStationsInfo_Station_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGetStationsInfo_Station, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGetStationsInfo_Station, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestGetStationsInfo_Station));
  ResponseGetStationsInfo_descriptor_ = file->message_type(4);
  static const int ResponseGetStationsInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetStationsInfo, protoversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetStationsInfo, station_),
  };
  ResponseGetStationsInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseGetStationsInfo_descriptor_,
      ResponseGetStationsInfo::default_instance_,
      ResponseGetStationsInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetStationsInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetStationsInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseGetStationsInfo));
  ResponseGetStationsInfo_Station_descriptor_ = ResponseGetStationsInfo_descriptor_->nested_type(0);
  static const int ResponseGetStationsInfo_Station_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetStationsInfo_Station, name_),
  };
  ResponseGetStationsInfo_Station_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseGetStationsInfo_Station_descriptor_,
      ResponseGetStationsInfo_Station::default_instance_,
      ResponseGetStationsInfo_Station_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetStationsInfo_Station, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetStationsInfo_Station, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseGetStationsInfo_Station));
  RequestAllTrains_descriptor_ = file->message_type(5);
  static const int RequestAllTrains_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAllTrains, protoversion_),
  };
  RequestAllTrains_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestAllTrains_descriptor_,
      RequestAllTrains::default_instance_,
      RequestAllTrains_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAllTrains, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAllTrains, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestAllTrains));
  ResponseAllTrains_descriptor_ = file->message_type(6);
  static const int ResponseAllTrains_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains, protoversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains, currenttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains, trains_),
  };
  ResponseAllTrains_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseAllTrains_descriptor_,
      ResponseAllTrains::default_instance_,
      ResponseAllTrains_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseAllTrains));
  ResponseAllTrains_Train_descriptor_ = ResponseAllTrains_descriptor_->nested_type(0);
  static const int ResponseAllTrains_Train_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains_Train, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains_Train, end_),
  };
  ResponseAllTrains_Train_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseAllTrains_Train_descriptor_,
      ResponseAllTrains_Train::default_instance_,
      ResponseAllTrains_Train_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains_Train, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains_Train, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseAllTrains_Train));
  ResponseAllTrains_Train_Station_descriptor_ = ResponseAllTrains_Train_descriptor_->nested_type(0);
  static const int ResponseAllTrains_Train_Station_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains_Train_Station, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains_Train_Station, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains_Train_Station, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains_Train_Station, time_),
  };
  ResponseAllTrains_Train_Station_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseAllTrains_Train_Station_descriptor_,
      ResponseAllTrains_Train_Station::default_instance_,
      ResponseAllTrains_Train_Station_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains_Train_Station, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseAllTrains_Train_Station, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseAllTrains_Train_Station));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_WebsocketService_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestPovUpdate_descriptor_, &RequestPovUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestAllStations_descriptor_, &RequestAllStations::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseAllStations_descriptor_, &ResponseAllStations::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseAllStations_Station_descriptor_, &ResponseAllStations_Station::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestGetStationsInfo_descriptor_, &RequestGetStationsInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestGetStationsInfo_Station_descriptor_, &RequestGetStationsInfo_Station::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseGetStationsInfo_descriptor_, &ResponseGetStationsInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseGetStationsInfo_Station_descriptor_, &ResponseGetStationsInfo_Station::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestAllTrains_descriptor_, &RequestAllTrains::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseAllTrains_descriptor_, &ResponseAllTrains::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseAllTrains_Train_descriptor_, &ResponseAllTrains_Train::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseAllTrains_Train_Station_descriptor_, &ResponseAllTrains_Train_Station::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_WebsocketService_2eproto() {
  delete RequestPovUpdate::default_instance_;
  delete RequestPovUpdate_reflection_;
  delete RequestAllStations::default_instance_;
  delete RequestAllStations_reflection_;
  delete ResponseAllStations::default_instance_;
  delete ResponseAllStations_reflection_;
  delete ResponseAllStations_Station::default_instance_;
  delete ResponseAllStations_Station_reflection_;
  delete RequestGetStationsInfo::default_instance_;
  delete RequestGetStationsInfo_reflection_;
  delete RequestGetStationsInfo_Station::default_instance_;
  delete RequestGetStationsInfo_Station_reflection_;
  delete ResponseGetStationsInfo::default_instance_;
  delete ResponseGetStationsInfo_reflection_;
  delete ResponseGetStationsInfo_Station::default_instance_;
  delete ResponseGetStationsInfo_Station_reflection_;
  delete RequestAllTrains::default_instance_;
  delete RequestAllTrains_reflection_;
  delete ResponseAllTrains::default_instance_;
  delete ResponseAllTrains_reflection_;
  delete ResponseAllTrains_Train::default_instance_;
  delete ResponseAllTrains_Train_reflection_;
  delete ResponseAllTrains_Train_Station::default_instance_;
  delete ResponseAllTrains_Train_Station_reflection_;
}

void protobuf_AddDesc_WebsocketService_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026WebsocketService.proto\022\ntd.railviz\"~\n\020"
    "RequestPovUpdate\022\024\n\014protoVersion\030\001 \002(\005\022\023"
    "\n\013lt_latitude\030\002 \002(\002\022\024\n\014lt_longitude\030\003 \002("
    "\002\022\023\n\013rb_latitude\030\004 \002(\002\022\024\n\014rb_longitude\030\005"
    " \002(\002\"*\n\022RequestAllStations\022\024\n\014protoVersi"
    "on\030\001 \002(\005\"\270\001\n\023ResponseAllStations\022\024\n\014prot"
    "oVersion\030\001 \002(\005\0228\n\007station\030\002 \003(\0132\'.td.rai"
    "lviz.ResponseAllStations.Station\032Q\n\007Stat"
    "ion\022\021\n\tstationId\030\001 \002(\005\022\030\n\020station_latitu"
    "de\030\002 \002(\002\022\031\n\021station_longitude\030\003 \002(\002\"\211\001\n\026"
    "RequestGetStationsInfo\022\024\n\014protoVersion\030\001"
    " \002(\005\022;\n\007station\030\002 \003(\0132*.td.railviz.Reque"
    "stGetStationsInfo.Station\032\034\n\007Station\022\021\n\t"
    "stationId\030\001 \002(\005\"\206\001\n\027ResponseGetStationsI"
    "nfo\022\024\n\014protoVersion\030\001 \002(\005\022<\n\007station\030\002 \003"
    "(\0132+.td.railviz.ResponseGetStationsInfo."
    "Station\032\027\n\007Station\022\014\n\004name\030\001 \002(\t\"(\n\020Requ"
    "estAllTrains\022\024\n\014protoVersion\030\001 \002(\005\"\275\002\n\021R"
    "esponseAllTrains\022\024\n\014protoVersion\030\001 \002(\005\022\023"
    "\n\013currentTime\030\002 \002(\005\0223\n\006trains\030\003 \003(\0132#.td"
    ".railviz.ResponseAllTrains.Train\032\307\001\n\005Tra"
    "in\022:\n\005start\030\001 \002(\0132+.td.railviz.ResponseA"
    "llTrains.Train.Station\0228\n\003end\030\002 \002(\0132+.td"
    ".railviz.ResponseAllTrains.Train.Station"
    "\032H\n\007Station\022\n\n\002id\030\001 \002(\005\022\020\n\010latitude\030\002 \002("
    "\002\022\021\n\tlongitude\030\003 \002(\002\022\014\n\004time\030\004 \002(\005", 1034);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "WebsocketService.proto", &protobuf_RegisterTypes);
  RequestPovUpdate::default_instance_ = new RequestPovUpdate();
  RequestAllStations::default_instance_ = new RequestAllStations();
  ResponseAllStations::default_instance_ = new ResponseAllStations();
  ResponseAllStations_Station::default_instance_ = new ResponseAllStations_Station();
  RequestGetStationsInfo::default_instance_ = new RequestGetStationsInfo();
  RequestGetStationsInfo_Station::default_instance_ = new RequestGetStationsInfo_Station();
  ResponseGetStationsInfo::default_instance_ = new ResponseGetStationsInfo();
  ResponseGetStationsInfo_Station::default_instance_ = new ResponseGetStationsInfo_Station();
  RequestAllTrains::default_instance_ = new RequestAllTrains();
  ResponseAllTrains::default_instance_ = new ResponseAllTrains();
  ResponseAllTrains_Train::default_instance_ = new ResponseAllTrains_Train();
  ResponseAllTrains_Train_Station::default_instance_ = new ResponseAllTrains_Train_Station();
  RequestPovUpdate::default_instance_->InitAsDefaultInstance();
  RequestAllStations::default_instance_->InitAsDefaultInstance();
  ResponseAllStations::default_instance_->InitAsDefaultInstance();
  ResponseAllStations_Station::default_instance_->InitAsDefaultInstance();
  RequestGetStationsInfo::default_instance_->InitAsDefaultInstance();
  RequestGetStationsInfo_Station::default_instance_->InitAsDefaultInstance();
  ResponseGetStationsInfo::default_instance_->InitAsDefaultInstance();
  ResponseGetStationsInfo_Station::default_instance_->InitAsDefaultInstance();
  RequestAllTrains::default_instance_->InitAsDefaultInstance();
  ResponseAllTrains::default_instance_->InitAsDefaultInstance();
  ResponseAllTrains_Train::default_instance_->InitAsDefaultInstance();
  ResponseAllTrains_Train_Station::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_WebsocketService_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_WebsocketService_2eproto {
  StaticDescriptorInitializer_WebsocketService_2eproto() {
    protobuf_AddDesc_WebsocketService_2eproto();
  }
} static_descriptor_initializer_WebsocketService_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RequestPovUpdate::kProtoVersionFieldNumber;
const int RequestPovUpdate::kLtLatitudeFieldNumber;
const int RequestPovUpdate::kLtLongitudeFieldNumber;
const int RequestPovUpdate::kRbLatitudeFieldNumber;
const int RequestPovUpdate::kRbLongitudeFieldNumber;
#endif  // !_MSC_VER

RequestPovUpdate::RequestPovUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RequestPovUpdate::InitAsDefaultInstance() {
}

RequestPovUpdate::RequestPovUpdate(const RequestPovUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RequestPovUpdate::SharedCtor() {
  _cached_size_ = 0;
  protoversion_ = 0;
  lt_latitude_ = 0;
  lt_longitude_ = 0;
  rb_latitude_ = 0;
  rb_longitude_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestPovUpdate::~RequestPovUpdate() {
  SharedDtor();
}

void RequestPovUpdate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestPovUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestPovUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestPovUpdate_descriptor_;
}

const RequestPovUpdate& RequestPovUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

RequestPovUpdate* RequestPovUpdate::default_instance_ = NULL;

RequestPovUpdate* RequestPovUpdate::New() const {
  return new RequestPovUpdate;
}

void RequestPovUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    protoversion_ = 0;
    lt_latitude_ = 0;
    lt_longitude_ = 0;
    rb_latitude_ = 0;
    rb_longitude_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestPovUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 protoVersion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protoversion_)));
          set_has_protoversion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_lt_latitude;
        break;
      }

      // required float lt_latitude = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_lt_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lt_latitude_)));
          set_has_lt_latitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_lt_longitude;
        break;
      }

      // required float lt_longitude = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_lt_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lt_longitude_)));
          set_has_lt_longitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_rb_latitude;
        break;
      }

      // required float rb_latitude = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_rb_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rb_latitude_)));
          set_has_rb_latitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_rb_longitude;
        break;
      }

      // required float rb_longitude = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_rb_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rb_longitude_)));
          set_has_rb_longitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RequestPovUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->protoversion(), output);
  }

  // required float lt_latitude = 2;
  if (has_lt_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lt_latitude(), output);
  }

  // required float lt_longitude = 3;
  if (has_lt_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->lt_longitude(), output);
  }

  // required float rb_latitude = 4;
  if (has_rb_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rb_latitude(), output);
  }

  // required float rb_longitude = 5;
  if (has_rb_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rb_longitude(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RequestPovUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->protoversion(), target);
  }

  // required float lt_latitude = 2;
  if (has_lt_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lt_latitude(), target);
  }

  // required float lt_longitude = 3;
  if (has_lt_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->lt_longitude(), target);
  }

  // required float rb_latitude = 4;
  if (has_rb_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rb_latitude(), target);
  }

  // required float rb_longitude = 5;
  if (has_rb_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rb_longitude(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RequestPovUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 protoVersion = 1;
    if (has_protoversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protoversion());
    }

    // required float lt_latitude = 2;
    if (has_lt_latitude()) {
      total_size += 1 + 4;
    }

    // required float lt_longitude = 3;
    if (has_lt_longitude()) {
      total_size += 1 + 4;
    }

    // required float rb_latitude = 4;
    if (has_rb_latitude()) {
      total_size += 1 + 4;
    }

    // required float rb_longitude = 5;
    if (has_rb_longitude()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestPovUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestPovUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestPovUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestPovUpdate::MergeFrom(const RequestPovUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protoversion()) {
      set_protoversion(from.protoversion());
    }
    if (from.has_lt_latitude()) {
      set_lt_latitude(from.lt_latitude());
    }
    if (from.has_lt_longitude()) {
      set_lt_longitude(from.lt_longitude());
    }
    if (from.has_rb_latitude()) {
      set_rb_latitude(from.rb_latitude());
    }
    if (from.has_rb_longitude()) {
      set_rb_longitude(from.rb_longitude());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestPovUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestPovUpdate::CopyFrom(const RequestPovUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestPovUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void RequestPovUpdate::Swap(RequestPovUpdate* other) {
  if (other != this) {
    std::swap(protoversion_, other->protoversion_);
    std::swap(lt_latitude_, other->lt_latitude_);
    std::swap(lt_longitude_, other->lt_longitude_);
    std::swap(rb_latitude_, other->rb_latitude_);
    std::swap(rb_longitude_, other->rb_longitude_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestPovUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestPovUpdate_descriptor_;
  metadata.reflection = RequestPovUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestAllStations::kProtoVersionFieldNumber;
#endif  // !_MSC_VER

RequestAllStations::RequestAllStations()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RequestAllStations::InitAsDefaultInstance() {
}

RequestAllStations::RequestAllStations(const RequestAllStations& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RequestAllStations::SharedCtor() {
  _cached_size_ = 0;
  protoversion_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestAllStations::~RequestAllStations() {
  SharedDtor();
}

void RequestAllStations::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestAllStations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestAllStations::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestAllStations_descriptor_;
}

const RequestAllStations& RequestAllStations::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

RequestAllStations* RequestAllStations::default_instance_ = NULL;

RequestAllStations* RequestAllStations::New() const {
  return new RequestAllStations;
}

void RequestAllStations::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    protoversion_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestAllStations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 protoVersion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protoversion_)));
          set_has_protoversion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RequestAllStations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->protoversion(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RequestAllStations::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->protoversion(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RequestAllStations::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 protoVersion = 1;
    if (has_protoversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protoversion());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestAllStations::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestAllStations* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestAllStations*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestAllStations::MergeFrom(const RequestAllStations& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protoversion()) {
      set_protoversion(from.protoversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestAllStations::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestAllStations::CopyFrom(const RequestAllStations& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestAllStations::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestAllStations::Swap(RequestAllStations* other) {
  if (other != this) {
    std::swap(protoversion_, other->protoversion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestAllStations::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestAllStations_descriptor_;
  metadata.reflection = RequestAllStations_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseAllStations_Station::kStationIdFieldNumber;
const int ResponseAllStations_Station::kStationLatitudeFieldNumber;
const int ResponseAllStations_Station::kStationLongitudeFieldNumber;
#endif  // !_MSC_VER

ResponseAllStations_Station::ResponseAllStations_Station()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResponseAllStations_Station::InitAsDefaultInstance() {
}

ResponseAllStations_Station::ResponseAllStations_Station(const ResponseAllStations_Station& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResponseAllStations_Station::SharedCtor() {
  _cached_size_ = 0;
  stationid_ = 0;
  station_latitude_ = 0;
  station_longitude_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseAllStations_Station::~ResponseAllStations_Station() {
  SharedDtor();
}

void ResponseAllStations_Station::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseAllStations_Station::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseAllStations_Station::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseAllStations_Station_descriptor_;
}

const ResponseAllStations_Station& ResponseAllStations_Station::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

ResponseAllStations_Station* ResponseAllStations_Station::default_instance_ = NULL;

ResponseAllStations_Station* ResponseAllStations_Station::New() const {
  return new ResponseAllStations_Station;
}

void ResponseAllStations_Station::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stationid_ = 0;
    station_latitude_ = 0;
    station_longitude_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseAllStations_Station::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stationId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stationid_)));
          set_has_stationid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_station_latitude;
        break;
      }

      // required float station_latitude = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_station_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &station_latitude_)));
          set_has_station_latitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_station_longitude;
        break;
      }

      // required float station_longitude = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_station_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &station_longitude_)));
          set_has_station_longitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResponseAllStations_Station::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 stationId = 1;
  if (has_stationid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stationid(), output);
  }

  // required float station_latitude = 2;
  if (has_station_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->station_latitude(), output);
  }

  // required float station_longitude = 3;
  if (has_station_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->station_longitude(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResponseAllStations_Station::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 stationId = 1;
  if (has_stationid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stationid(), target);
  }

  // required float station_latitude = 2;
  if (has_station_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->station_latitude(), target);
  }

  // required float station_longitude = 3;
  if (has_station_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->station_longitude(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResponseAllStations_Station::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stationId = 1;
    if (has_stationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stationid());
    }

    // required float station_latitude = 2;
    if (has_station_latitude()) {
      total_size += 1 + 4;
    }

    // required float station_longitude = 3;
    if (has_station_longitude()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseAllStations_Station::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseAllStations_Station* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseAllStations_Station*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseAllStations_Station::MergeFrom(const ResponseAllStations_Station& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stationid()) {
      set_stationid(from.stationid());
    }
    if (from.has_station_latitude()) {
      set_station_latitude(from.station_latitude());
    }
    if (from.has_station_longitude()) {
      set_station_longitude(from.station_longitude());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseAllStations_Station::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseAllStations_Station::CopyFrom(const ResponseAllStations_Station& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseAllStations_Station::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ResponseAllStations_Station::Swap(ResponseAllStations_Station* other) {
  if (other != this) {
    std::swap(stationid_, other->stationid_);
    std::swap(station_latitude_, other->station_latitude_);
    std::swap(station_longitude_, other->station_longitude_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseAllStations_Station::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseAllStations_Station_descriptor_;
  metadata.reflection = ResponseAllStations_Station_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ResponseAllStations::kProtoVersionFieldNumber;
const int ResponseAllStations::kStationFieldNumber;
#endif  // !_MSC_VER

ResponseAllStations::ResponseAllStations()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResponseAllStations::InitAsDefaultInstance() {
}

ResponseAllStations::ResponseAllStations(const ResponseAllStations& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResponseAllStations::SharedCtor() {
  _cached_size_ = 0;
  protoversion_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseAllStations::~ResponseAllStations() {
  SharedDtor();
}

void ResponseAllStations::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseAllStations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseAllStations::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseAllStations_descriptor_;
}

const ResponseAllStations& ResponseAllStations::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

ResponseAllStations* ResponseAllStations::default_instance_ = NULL;

ResponseAllStations* ResponseAllStations::New() const {
  return new ResponseAllStations;
}

void ResponseAllStations::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    protoversion_ = 0;
  }
  station_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseAllStations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 protoVersion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protoversion_)));
          set_has_protoversion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_station;
        break;
      }

      // repeated .td.railviz.ResponseAllStations.Station station = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_station:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_station()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_station;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResponseAllStations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->protoversion(), output);
  }

  // repeated .td.railviz.ResponseAllStations.Station station = 2;
  for (int i = 0; i < this->station_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->station(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResponseAllStations::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->protoversion(), target);
  }

  // repeated .td.railviz.ResponseAllStations.Station station = 2;
  for (int i = 0; i < this->station_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->station(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResponseAllStations::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 protoVersion = 1;
    if (has_protoversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protoversion());
    }

  }
  // repeated .td.railviz.ResponseAllStations.Station station = 2;
  total_size += 1 * this->station_size();
  for (int i = 0; i < this->station_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->station(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseAllStations::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseAllStations* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseAllStations*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseAllStations::MergeFrom(const ResponseAllStations& from) {
  GOOGLE_CHECK_NE(&from, this);
  station_.MergeFrom(from.station_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protoversion()) {
      set_protoversion(from.protoversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseAllStations::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseAllStations::CopyFrom(const ResponseAllStations& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseAllStations::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < station_size(); i++) {
    if (!this->station(i).IsInitialized()) return false;
  }
  return true;
}

void ResponseAllStations::Swap(ResponseAllStations* other) {
  if (other != this) {
    std::swap(protoversion_, other->protoversion_);
    station_.Swap(&other->station_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseAllStations::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseAllStations_descriptor_;
  metadata.reflection = ResponseAllStations_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestGetStationsInfo_Station::kStationIdFieldNumber;
#endif  // !_MSC_VER

RequestGetStationsInfo_Station::RequestGetStationsInfo_Station()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RequestGetStationsInfo_Station::InitAsDefaultInstance() {
}

RequestGetStationsInfo_Station::RequestGetStationsInfo_Station(const RequestGetStationsInfo_Station& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RequestGetStationsInfo_Station::SharedCtor() {
  _cached_size_ = 0;
  stationid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestGetStationsInfo_Station::~RequestGetStationsInfo_Station() {
  SharedDtor();
}

void RequestGetStationsInfo_Station::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestGetStationsInfo_Station::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestGetStationsInfo_Station::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestGetStationsInfo_Station_descriptor_;
}

const RequestGetStationsInfo_Station& RequestGetStationsInfo_Station::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

RequestGetStationsInfo_Station* RequestGetStationsInfo_Station::default_instance_ = NULL;

RequestGetStationsInfo_Station* RequestGetStationsInfo_Station::New() const {
  return new RequestGetStationsInfo_Station;
}

void RequestGetStationsInfo_Station::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stationid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestGetStationsInfo_Station::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stationId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stationid_)));
          set_has_stationid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RequestGetStationsInfo_Station::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 stationId = 1;
  if (has_stationid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stationid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RequestGetStationsInfo_Station::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 stationId = 1;
  if (has_stationid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stationid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RequestGetStationsInfo_Station::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stationId = 1;
    if (has_stationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stationid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestGetStationsInfo_Station::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestGetStationsInfo_Station* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestGetStationsInfo_Station*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestGetStationsInfo_Station::MergeFrom(const RequestGetStationsInfo_Station& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stationid()) {
      set_stationid(from.stationid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestGetStationsInfo_Station::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestGetStationsInfo_Station::CopyFrom(const RequestGetStationsInfo_Station& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestGetStationsInfo_Station::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestGetStationsInfo_Station::Swap(RequestGetStationsInfo_Station* other) {
  if (other != this) {
    std::swap(stationid_, other->stationid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestGetStationsInfo_Station::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestGetStationsInfo_Station_descriptor_;
  metadata.reflection = RequestGetStationsInfo_Station_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int RequestGetStationsInfo::kProtoVersionFieldNumber;
const int RequestGetStationsInfo::kStationFieldNumber;
#endif  // !_MSC_VER

RequestGetStationsInfo::RequestGetStationsInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RequestGetStationsInfo::InitAsDefaultInstance() {
}

RequestGetStationsInfo::RequestGetStationsInfo(const RequestGetStationsInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RequestGetStationsInfo::SharedCtor() {
  _cached_size_ = 0;
  protoversion_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestGetStationsInfo::~RequestGetStationsInfo() {
  SharedDtor();
}

void RequestGetStationsInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestGetStationsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestGetStationsInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestGetStationsInfo_descriptor_;
}

const RequestGetStationsInfo& RequestGetStationsInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

RequestGetStationsInfo* RequestGetStationsInfo::default_instance_ = NULL;

RequestGetStationsInfo* RequestGetStationsInfo::New() const {
  return new RequestGetStationsInfo;
}

void RequestGetStationsInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    protoversion_ = 0;
  }
  station_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestGetStationsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 protoVersion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protoversion_)));
          set_has_protoversion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_station;
        break;
      }

      // repeated .td.railviz.RequestGetStationsInfo.Station station = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_station:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_station()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_station;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RequestGetStationsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->protoversion(), output);
  }

  // repeated .td.railviz.RequestGetStationsInfo.Station station = 2;
  for (int i = 0; i < this->station_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->station(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RequestGetStationsInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->protoversion(), target);
  }

  // repeated .td.railviz.RequestGetStationsInfo.Station station = 2;
  for (int i = 0; i < this->station_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->station(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RequestGetStationsInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 protoVersion = 1;
    if (has_protoversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protoversion());
    }

  }
  // repeated .td.railviz.RequestGetStationsInfo.Station station = 2;
  total_size += 1 * this->station_size();
  for (int i = 0; i < this->station_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->station(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestGetStationsInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestGetStationsInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestGetStationsInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestGetStationsInfo::MergeFrom(const RequestGetStationsInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  station_.MergeFrom(from.station_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protoversion()) {
      set_protoversion(from.protoversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestGetStationsInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestGetStationsInfo::CopyFrom(const RequestGetStationsInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestGetStationsInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < station_size(); i++) {
    if (!this->station(i).IsInitialized()) return false;
  }
  return true;
}

void RequestGetStationsInfo::Swap(RequestGetStationsInfo* other) {
  if (other != this) {
    std::swap(protoversion_, other->protoversion_);
    station_.Swap(&other->station_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestGetStationsInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestGetStationsInfo_descriptor_;
  metadata.reflection = RequestGetStationsInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseGetStationsInfo_Station::kNameFieldNumber;
#endif  // !_MSC_VER

ResponseGetStationsInfo_Station::ResponseGetStationsInfo_Station()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResponseGetStationsInfo_Station::InitAsDefaultInstance() {
}

ResponseGetStationsInfo_Station::ResponseGetStationsInfo_Station(const ResponseGetStationsInfo_Station& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResponseGetStationsInfo_Station::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseGetStationsInfo_Station::~ResponseGetStationsInfo_Station() {
  SharedDtor();
}

void ResponseGetStationsInfo_Station::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ResponseGetStationsInfo_Station::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseGetStationsInfo_Station::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseGetStationsInfo_Station_descriptor_;
}

const ResponseGetStationsInfo_Station& ResponseGetStationsInfo_Station::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

ResponseGetStationsInfo_Station* ResponseGetStationsInfo_Station::default_instance_ = NULL;

ResponseGetStationsInfo_Station* ResponseGetStationsInfo_Station::New() const {
  return new ResponseGetStationsInfo_Station;
}

void ResponseGetStationsInfo_Station::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseGetStationsInfo_Station::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResponseGetStationsInfo_Station::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResponseGetStationsInfo_Station::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResponseGetStationsInfo_Station::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseGetStationsInfo_Station::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseGetStationsInfo_Station* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseGetStationsInfo_Station*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseGetStationsInfo_Station::MergeFrom(const ResponseGetStationsInfo_Station& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseGetStationsInfo_Station::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseGetStationsInfo_Station::CopyFrom(const ResponseGetStationsInfo_Station& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseGetStationsInfo_Station::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResponseGetStationsInfo_Station::Swap(ResponseGetStationsInfo_Station* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseGetStationsInfo_Station::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseGetStationsInfo_Station_descriptor_;
  metadata.reflection = ResponseGetStationsInfo_Station_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ResponseGetStationsInfo::kProtoVersionFieldNumber;
const int ResponseGetStationsInfo::kStationFieldNumber;
#endif  // !_MSC_VER

ResponseGetStationsInfo::ResponseGetStationsInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResponseGetStationsInfo::InitAsDefaultInstance() {
}

ResponseGetStationsInfo::ResponseGetStationsInfo(const ResponseGetStationsInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResponseGetStationsInfo::SharedCtor() {
  _cached_size_ = 0;
  protoversion_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseGetStationsInfo::~ResponseGetStationsInfo() {
  SharedDtor();
}

void ResponseGetStationsInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseGetStationsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseGetStationsInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseGetStationsInfo_descriptor_;
}

const ResponseGetStationsInfo& ResponseGetStationsInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

ResponseGetStationsInfo* ResponseGetStationsInfo::default_instance_ = NULL;

ResponseGetStationsInfo* ResponseGetStationsInfo::New() const {
  return new ResponseGetStationsInfo;
}

void ResponseGetStationsInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    protoversion_ = 0;
  }
  station_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseGetStationsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 protoVersion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protoversion_)));
          set_has_protoversion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_station;
        break;
      }

      // repeated .td.railviz.ResponseGetStationsInfo.Station station = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_station:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_station()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_station;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResponseGetStationsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->protoversion(), output);
  }

  // repeated .td.railviz.ResponseGetStationsInfo.Station station = 2;
  for (int i = 0; i < this->station_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->station(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResponseGetStationsInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->protoversion(), target);
  }

  // repeated .td.railviz.ResponseGetStationsInfo.Station station = 2;
  for (int i = 0; i < this->station_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->station(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResponseGetStationsInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 protoVersion = 1;
    if (has_protoversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protoversion());
    }

  }
  // repeated .td.railviz.ResponseGetStationsInfo.Station station = 2;
  total_size += 1 * this->station_size();
  for (int i = 0; i < this->station_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->station(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseGetStationsInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseGetStationsInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseGetStationsInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseGetStationsInfo::MergeFrom(const ResponseGetStationsInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  station_.MergeFrom(from.station_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protoversion()) {
      set_protoversion(from.protoversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseGetStationsInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseGetStationsInfo::CopyFrom(const ResponseGetStationsInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseGetStationsInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < station_size(); i++) {
    if (!this->station(i).IsInitialized()) return false;
  }
  return true;
}

void ResponseGetStationsInfo::Swap(ResponseGetStationsInfo* other) {
  if (other != this) {
    std::swap(protoversion_, other->protoversion_);
    station_.Swap(&other->station_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseGetStationsInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseGetStationsInfo_descriptor_;
  metadata.reflection = ResponseGetStationsInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestAllTrains::kProtoVersionFieldNumber;
#endif  // !_MSC_VER

RequestAllTrains::RequestAllTrains()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RequestAllTrains::InitAsDefaultInstance() {
}

RequestAllTrains::RequestAllTrains(const RequestAllTrains& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RequestAllTrains::SharedCtor() {
  _cached_size_ = 0;
  protoversion_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestAllTrains::~RequestAllTrains() {
  SharedDtor();
}

void RequestAllTrains::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestAllTrains::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestAllTrains::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestAllTrains_descriptor_;
}

const RequestAllTrains& RequestAllTrains::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

RequestAllTrains* RequestAllTrains::default_instance_ = NULL;

RequestAllTrains* RequestAllTrains::New() const {
  return new RequestAllTrains;
}

void RequestAllTrains::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    protoversion_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestAllTrains::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 protoVersion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protoversion_)));
          set_has_protoversion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RequestAllTrains::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->protoversion(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RequestAllTrains::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->protoversion(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RequestAllTrains::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 protoVersion = 1;
    if (has_protoversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protoversion());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestAllTrains::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestAllTrains* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestAllTrains*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestAllTrains::MergeFrom(const RequestAllTrains& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protoversion()) {
      set_protoversion(from.protoversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestAllTrains::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestAllTrains::CopyFrom(const RequestAllTrains& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestAllTrains::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestAllTrains::Swap(RequestAllTrains* other) {
  if (other != this) {
    std::swap(protoversion_, other->protoversion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestAllTrains::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestAllTrains_descriptor_;
  metadata.reflection = RequestAllTrains_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseAllTrains_Train_Station::kIdFieldNumber;
const int ResponseAllTrains_Train_Station::kLatitudeFieldNumber;
const int ResponseAllTrains_Train_Station::kLongitudeFieldNumber;
const int ResponseAllTrains_Train_Station::kTimeFieldNumber;
#endif  // !_MSC_VER

ResponseAllTrains_Train_Station::ResponseAllTrains_Train_Station()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResponseAllTrains_Train_Station::InitAsDefaultInstance() {
}

ResponseAllTrains_Train_Station::ResponseAllTrains_Train_Station(const ResponseAllTrains_Train_Station& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResponseAllTrains_Train_Station::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  latitude_ = 0;
  longitude_ = 0;
  time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseAllTrains_Train_Station::~ResponseAllTrains_Train_Station() {
  SharedDtor();
}

void ResponseAllTrains_Train_Station::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseAllTrains_Train_Station::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseAllTrains_Train_Station::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseAllTrains_Train_Station_descriptor_;
}

const ResponseAllTrains_Train_Station& ResponseAllTrains_Train_Station::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

ResponseAllTrains_Train_Station* ResponseAllTrains_Train_Station::default_instance_ = NULL;

ResponseAllTrains_Train_Station* ResponseAllTrains_Train_Station::New() const {
  return new ResponseAllTrains_Train_Station;
}

void ResponseAllTrains_Train_Station::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    latitude_ = 0;
    longitude_ = 0;
    time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseAllTrains_Train_Station::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_latitude;
        break;
      }

      // required float latitude = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
          set_has_latitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_longitude;
        break;
      }

      // required float longitude = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
          set_has_longitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_time;
        break;
      }

      // required int32 time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResponseAllTrains_Train_Station::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required float latitude = 2;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->latitude(), output);
  }

  // required float longitude = 3;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->longitude(), output);
  }

  // required int32 time = 4;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResponseAllTrains_Train_Station::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required float latitude = 2;
  if (has_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->latitude(), target);
  }

  // required float longitude = 3;
  if (has_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->longitude(), target);
  }

  // required int32 time = 4;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResponseAllTrains_Train_Station::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required float latitude = 2;
    if (has_latitude()) {
      total_size += 1 + 4;
    }

    // required float longitude = 3;
    if (has_longitude()) {
      total_size += 1 + 4;
    }

    // required int32 time = 4;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseAllTrains_Train_Station::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseAllTrains_Train_Station* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseAllTrains_Train_Station*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseAllTrains_Train_Station::MergeFrom(const ResponseAllTrains_Train_Station& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_latitude()) {
      set_latitude(from.latitude());
    }
    if (from.has_longitude()) {
      set_longitude(from.longitude());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseAllTrains_Train_Station::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseAllTrains_Train_Station::CopyFrom(const ResponseAllTrains_Train_Station& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseAllTrains_Train_Station::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ResponseAllTrains_Train_Station::Swap(ResponseAllTrains_Train_Station* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(latitude_, other->latitude_);
    std::swap(longitude_, other->longitude_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseAllTrains_Train_Station::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseAllTrains_Train_Station_descriptor_;
  metadata.reflection = ResponseAllTrains_Train_Station_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ResponseAllTrains_Train::kStartFieldNumber;
const int ResponseAllTrains_Train::kEndFieldNumber;
#endif  // !_MSC_VER

ResponseAllTrains_Train::ResponseAllTrains_Train()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResponseAllTrains_Train::InitAsDefaultInstance() {
  start_ = const_cast< ::td::railviz::ResponseAllTrains_Train_Station*>(&::td::railviz::ResponseAllTrains_Train_Station::default_instance());
  end_ = const_cast< ::td::railviz::ResponseAllTrains_Train_Station*>(&::td::railviz::ResponseAllTrains_Train_Station::default_instance());
}

ResponseAllTrains_Train::ResponseAllTrains_Train(const ResponseAllTrains_Train& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResponseAllTrains_Train::SharedCtor() {
  _cached_size_ = 0;
  start_ = NULL;
  end_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseAllTrains_Train::~ResponseAllTrains_Train() {
  SharedDtor();
}

void ResponseAllTrains_Train::SharedDtor() {
  if (this != default_instance_) {
    delete start_;
    delete end_;
  }
}

void ResponseAllTrains_Train::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseAllTrains_Train::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseAllTrains_Train_descriptor_;
}

const ResponseAllTrains_Train& ResponseAllTrains_Train::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

ResponseAllTrains_Train* ResponseAllTrains_Train::default_instance_ = NULL;

ResponseAllTrains_Train* ResponseAllTrains_Train::New() const {
  return new ResponseAllTrains_Train;
}

void ResponseAllTrains_Train::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_start()) {
      if (start_ != NULL) start_->::td::railviz::ResponseAllTrains_Train_Station::Clear();
    }
    if (has_end()) {
      if (end_ != NULL) end_->::td::railviz::ResponseAllTrains_Train_Station::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseAllTrains_Train::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .td.railviz.ResponseAllTrains.Train.Station start = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_end;
        break;
      }

      // required .td.railviz.ResponseAllTrains.Train.Station end = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_end:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResponseAllTrains_Train::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .td.railviz.ResponseAllTrains.Train.Station start = 1;
  if (has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->start(), output);
  }

  // required .td.railviz.ResponseAllTrains.Train.Station end = 2;
  if (has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->end(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResponseAllTrains_Train::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .td.railviz.ResponseAllTrains.Train.Station start = 1;
  if (has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->start(), target);
  }

  // required .td.railviz.ResponseAllTrains.Train.Station end = 2;
  if (has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->end(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResponseAllTrains_Train::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .td.railviz.ResponseAllTrains.Train.Station start = 1;
    if (has_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->start());
    }

    // required .td.railviz.ResponseAllTrains.Train.Station end = 2;
    if (has_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->end());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseAllTrains_Train::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseAllTrains_Train* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseAllTrains_Train*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseAllTrains_Train::MergeFrom(const ResponseAllTrains_Train& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start()) {
      mutable_start()->::td::railviz::ResponseAllTrains_Train_Station::MergeFrom(from.start());
    }
    if (from.has_end()) {
      mutable_end()->::td::railviz::ResponseAllTrains_Train_Station::MergeFrom(from.end());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseAllTrains_Train::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseAllTrains_Train::CopyFrom(const ResponseAllTrains_Train& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseAllTrains_Train::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_start()) {
    if (!this->start().IsInitialized()) return false;
  }
  if (has_end()) {
    if (!this->end().IsInitialized()) return false;
  }
  return true;
}

void ResponseAllTrains_Train::Swap(ResponseAllTrains_Train* other) {
  if (other != this) {
    std::swap(start_, other->start_);
    std::swap(end_, other->end_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseAllTrains_Train::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseAllTrains_Train_descriptor_;
  metadata.reflection = ResponseAllTrains_Train_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ResponseAllTrains::kProtoVersionFieldNumber;
const int ResponseAllTrains::kCurrentTimeFieldNumber;
const int ResponseAllTrains::kTrainsFieldNumber;
#endif  // !_MSC_VER

ResponseAllTrains::ResponseAllTrains()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResponseAllTrains::InitAsDefaultInstance() {
}

ResponseAllTrains::ResponseAllTrains(const ResponseAllTrains& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResponseAllTrains::SharedCtor() {
  _cached_size_ = 0;
  protoversion_ = 0;
  currenttime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseAllTrains::~ResponseAllTrains() {
  SharedDtor();
}

void ResponseAllTrains::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseAllTrains::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseAllTrains::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseAllTrains_descriptor_;
}

const ResponseAllTrains& ResponseAllTrains::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebsocketService_2eproto();
  return *default_instance_;
}

ResponseAllTrains* ResponseAllTrains::default_instance_ = NULL;

ResponseAllTrains* ResponseAllTrains::New() const {
  return new ResponseAllTrains;
}

void ResponseAllTrains::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    protoversion_ = 0;
    currenttime_ = 0;
  }
  trains_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseAllTrains::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 protoVersion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protoversion_)));
          set_has_protoversion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_currentTime;
        break;
      }

      // required int32 currentTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currenttime_)));
          set_has_currenttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_trains;
        break;
      }

      // repeated .td.railviz.ResponseAllTrains.Train trains = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trains:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trains()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_trains;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResponseAllTrains::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->protoversion(), output);
  }

  // required int32 currentTime = 2;
  if (has_currenttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->currenttime(), output);
  }

  // repeated .td.railviz.ResponseAllTrains.Train trains = 3;
  for (int i = 0; i < this->trains_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->trains(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResponseAllTrains::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 protoVersion = 1;
  if (has_protoversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->protoversion(), target);
  }

  // required int32 currentTime = 2;
  if (has_currenttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->currenttime(), target);
  }

  // repeated .td.railviz.ResponseAllTrains.Train trains = 3;
  for (int i = 0; i < this->trains_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->trains(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResponseAllTrains::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 protoVersion = 1;
    if (has_protoversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protoversion());
    }

    // required int32 currentTime = 2;
    if (has_currenttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currenttime());
    }

  }
  // repeated .td.railviz.ResponseAllTrains.Train trains = 3;
  total_size += 1 * this->trains_size();
  for (int i = 0; i < this->trains_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trains(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseAllTrains::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseAllTrains* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseAllTrains*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseAllTrains::MergeFrom(const ResponseAllTrains& from) {
  GOOGLE_CHECK_NE(&from, this);
  trains_.MergeFrom(from.trains_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protoversion()) {
      set_protoversion(from.protoversion());
    }
    if (from.has_currenttime()) {
      set_currenttime(from.currenttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseAllTrains::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseAllTrains::CopyFrom(const ResponseAllTrains& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseAllTrains::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < trains_size(); i++) {
    if (!this->trains(i).IsInitialized()) return false;
  }
  return true;
}

void ResponseAllTrains::Swap(ResponseAllTrains* other) {
  if (other != this) {
    std::swap(protoversion_, other->protoversion_);
    std::swap(currenttime_, other->currenttime_);
    trains_.Swap(&other->trains_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseAllTrains::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseAllTrains_descriptor_;
  metadata.reflection = ResponseAllTrains_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace railviz
}  // namespace td

// @@protoc_insertion_point(global_scope)
